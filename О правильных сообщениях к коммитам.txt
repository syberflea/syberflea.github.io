О правильных сообщениях к коммитам (https://t.me/practicumtech/527).

Культура работы с Git: сообщения к коммитам
Юлия Волкова, фронтенд-разработчик
Культура работы с Git: сообщения к коммитам
Юлия Волкова, фронтенд-разработчик
Git — это не только знание самой технологии и конкретных команд, но и определённая культура взаимодействия, практики, подходы, договорённости. В статье я расскажу о хороших практиках и общепринятых подходах написания сообщений к коммитам, которые помогут команде понимать друг друга и работать быстрее и чётче.

Стоит начать с того, что сообщения к коммитам — это важно. Информативные сообщения помогают вам и вашим коллегам ориентироваться в сделанных изменениях, облегчают навигацию по истории проекта и упрощают отладку и поиск ошибок — всё это делает работу в команде более эффективной.

Однако, прежде чем поговорить о том, как сформулировать сообщение к коммиту, которое будет помогать вам и ваши коллегам, стоит сделать акцент на том, что в принципе важно в процессе работы над каким-то функционалом разделять свою работу на коммиты. Когда код разделен на относительно небольшие, осмысленные кусочки, это сильно облегчает ревью, поиск закравшейся ошибки, понимание, что в целом было изменено.

Подробнее об этом мы поговорим, когда будем обсуждать работу в пуллреквестах.

Грамотно написанные сообщения к коммитам могут помочь вам автоматически формировать ченджлоги (changelogs) к проекту на основе сделанных описаний — например, с помощью пакета auto-changelog.

Также с помощью сообщений к коммитам можно понимать, какой конкретный коммит вам нужен, если вы хотите точечно достать изменения из одной ветки и перенести их в другую с помощью команды git cherry-pick.

Поэтому, стоит отнестись к написанию таких сообщений осознанно.

Как оставить комментарий
Это довольно просто — используйте команду `git commit` и опцию -m:

git commit -m ‘Fix: Correct typo in the main interface function’
Как оставить хороший комментарий
Несколько рекомендаций, которые вам в этом помогут.

Старайтесь избегать односложных сообщений: «ок», «work», «wip», «fix» — они совсем не информативны. Ни в процессе ревью, ни позже, если понадобится найти какое-то конкретное изменение, они совсем вам не помогут. 

Хорошее сообщение коммита не только помогает другим членам команды понять, что вы сделали, но и может быть полезным для вас в будущем при поиске определённых изменений.

Формулируйте сообщение конкретно. Оно должно давать чёткое представление о том, что было изменено и почему — когда пишете сообщение, попробуйте задать себе эти вопросы и записать в сообщении краткий ответ в одно предложение.

Избегайте неоднозначности. В продолжение предыдущего пункта — лучше избегать нечётких формулировок: «исправление ошибок», «фикс багов» или «улучшения». Будьте конкретным в том, что было сделано.

Старайтесь укладываться в 72 символа — сообщение должно оставаться кратким, чтобы его можно было читать без прокрутки. Если нужно более подробное описание, после первой строки оставьте пустую строку, а затем добавьте подробности.

Укажите номер из таск-трекера, если ваш коммит связан с определённой задачей или ошибкой, которые заведены в Jira или Trello.

Используйте стандарт Conventional Commit (подробнее о нём — в доп. материалах в конце статьи). Он поможет писать ёмкие, но лаконичные сообщения. Конвенция предлагает в начало сообщения ставить специальный префикс — тип коммита, описывающий характер изменений. Например:

- feat – новая функциональность;

- fix – исправление бага;

- style – изменение форматирования, удаление комментариев, пропущенных точек с запятыми;

- refactor – рефакторинг, улучшение кода, не вносящее никакой новой функциональности и не являющееся фиксом.

Небольшой пример для закрепления знаний.

❌ Плохо

1. fixed stuff

2. more changes

3. updated files

4. сhanged style

✅ Намного лучше!

1. Fix: Resolve race condition in user authentication

2. Refactor: Split order processing into separate functions

3. Add: Implement search feature in main navigation

4. Feat: Improve performance with lazy load implementation for images

Возьмём ещё пример – улучшим коммит 'Change styles'.

Сейчас он очень общий и расплывчатый: глядя на него можно предположить буквально что угодно – от того, что вы где-то добавили padding, до того, что вы вообще переделали дизайн.

Давайте его немного изменим:

 'Add margin to nav items '

Теперь мы уже конкретизировали изменение, понятен масштаб, стало намного яснее!

А давайте теперь исправим его еще немного:

 'Add margin to nav items to prevent them from overlapping the logo"

И вот мы понимаем не только что, но и почему, это даёт нам максимум контекста.

Язык комментария: русский или английский
Чаще всего, сообщения к коммитам пишут на английском языке. 

Английский — это международный язык и язык современной IT индустрии. Достаточно часто разработчики работают в многонациональных командах или с зарубежными заказчиками. В таком случае ведение всей работы в репозитории (описание к пуллреквестам, названия веток и сообщения к коммитам) на английском делает возможным общение между всеми членами команды. 

Часто даже в полностью русскоязычных командах используют английский для названия веток и написания сообщений к коммитам. Однако, если вся ваша коммуникация вокруг проекта строится на русском языке, то вполне приемлемо писать сообщения на русском. Главное, стараться придерживаться в команде единого стиля.

Дополнительные материалы
How to Write Better Git Commit Messages[https://www.freecodecamp.org/news/how-to-write-better-git-commit-messages/] – A Step-By-Step Guide — отличная статья на FreeCodeCamp, раскрывающая множество аспектов;

Conventional Commits[https://www.conventionalcommits.org/en/v1.0.0/#summary] — спецификация для добавления человеко- и машиночитаемого смысла в сообщения коммитов;

Commit Message Guide[https://developers.google.com/blockly/guides/contribute/get-started/commits] — туториал на Google Developers.
